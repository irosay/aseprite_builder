name: Build Aseprite

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - master

env:
  BUILD_TYPE: Release
  
jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      download_url: ${{ steps.version_info.outputs.download_url }}
      latest_tag: ${{ steps.version_info.outputs.latest_tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Get latest Aseprite release
      id: version_info
      run: |
        data=$(curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest)
        LATEST_TAG=$(echo "$data" | jq -r '.tag_name')
        DOWNLOAD_URL=$(echo "$data" | jq -r '.assets[].browser_download_url')
        VERSION_INFO=$(echo "$data" | jq -r '.body')
        
        echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
        echo "download_url=${DOWNLOAD_URL}" >> $GITHUB_OUTPUT
        echo "version_info=${VERSION_INFO}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version_info.outputs.latest_tag }}
        release_name: Aseprite ${{ steps.version_info.outputs.latest_tag }}
        body: ${{ steps.version_info.outputs.version_info }}
        draft: true
        prerelease: false

  build-aseprite:
    runs-on: windows-latest
    needs: check-version
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Visual Studio
        uses: seanmiddleditch/gha-setup-vsdevenv@v1
      
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3
      
      - name: Cache Skia
        id: skia-cache
        uses: actions/cache@v4
        with:
          path: skia
          key: skia-windows-${{ hashFiles('**/skia.lock') }}
      
      - name: Download Skia
        if: steps.skia-cache.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/aseprite/skia/releases/download/m81-b607b32047/Skia-Windows-Release-X64.zip -o Skia.zip
          unzip Skia.zip -d skia
      
      - name: Download Aseprite Source
        run: |
          curl -L ${{ needs.check-version.outputs.download_url }} -o Aseprite-source.zip
          unzip Aseprite-source.zip -d aseprite
          mkdir -p aseprite/build
      
      - name: Configure CMake
        working-directory: aseprite/build
        run: >
          cmake 
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} 
          -DLAF_BACKEND=skia 
          -DSKIA_DIR=../../skia 
          -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64 
          -G Ninja ..
      
      - name: Build Aseprite
        working-directory: aseprite/build
        run: ninja aseprite
      
      - name: Package Release
        working-directory: aseprite/build/bin
        run: |
          echo '# Portable config' > aseprite.ini
          7z a Aseprite-${{ needs.check-version.outputs.latest_tag }}-Windows.zip *
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.check-version.outputs.upload_url }}
          asset_path: aseprite/build/bin/Aseprite-${{ needs.check-version.outputs.latest_tag }}-Windows.zip
          asset_name: Aseprite-${{ needs.check-version.outputs.latest_tag }}-Windows.zip
          asset_content_type: application/zip
